// <auto-generated />
using System;
using ChallengeMuttuApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace ChallengeMuttuApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250519133437_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChallengeMuttuApi.Model.Box", b =>
                {
                    b.Property<int>("IdBox")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_BOX");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBox"));

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_ENTRADA");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_SAIDA");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("NOME");

                    b.Property<string>("Observacao")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("OBSERVACAO");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("STATUS");

                    b.HasKey("IdBox");

                    b.ToTable("TB_BOX");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_CLIENTE");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVARCHAR2(11)")
                        .HasColumnName("CPF");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_CADASTRO");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_NASCIMENTO");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ESTADO_CIVIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("Profissao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("PROFISSAO");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("NVARCHAR2(2)")
                        .HasColumnName("SEXO");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("SOBRENOME");

                    b.Property<int>("TbContatoIdContato")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_CONTATO_ID_CONTATO");

                    b.Property<int>("TbEnderecoIdEndereco")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_ENDERECO_ID_ENDERECO");

                    b.HasKey("IdCliente");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.HasIndex("TbContatoIdContato");

                    b.HasIndex("TbEnderecoIdEndereco");

                    b.ToTable("TB_CLIENTE");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.ClienteVeiculo", b =>
                {
                    b.Property<int>("TbClienteIdCliente")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_CLIENTE_ID_CLIENTE");

                    b.Property<int>("TbClienteTbEnderecoIdEndereco")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_CLIENTE_TB_ENDERECO_ID_ENDERECO");

                    b.Property<int>("TbClienteTbContatoIdContato")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_CLIENTE_TB_CONTATO_ID_CONTATO");

                    b.Property<int>("TbVeiculoIdVeiculo")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_VEICULO_ID_VEICULO");

                    b.HasKey("TbClienteIdCliente", "TbClienteTbEnderecoIdEndereco", "TbClienteTbContatoIdContato", "TbVeiculoIdVeiculo");

                    b.HasIndex("TbVeiculoIdVeiculo");

                    b.ToTable("TB_CLIENTEVEICULO");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.Contato", b =>
                {
                    b.Property<int>("IdContato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_CONTATO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContato"));

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("CELULAR");

                    b.Property<int>("Ddd")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DDD");

                    b.Property<int>("Ddi")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DDI");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Observacao")
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("OBSERVACAO");

                    b.Property<string>("Outro")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("OUTRO");

                    b.Property<string>("Telefone1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("TELEFONE1");

                    b.Property<string>("Telefone2")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("TELEFONE2");

                    b.Property<string>("Telefone3")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("TELEFONE3");

                    b.HasKey("IdContato");

                    b.ToTable("TB_CONTATO");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.ContatoPatio", b =>
                {
                    b.Property<int>("TbPatioIdPatio")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_PATIO_ID_PATIO");

                    b.Property<int>("TbContatoIdContato")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_CONTATO_ID_CONTATO");

                    b.HasKey("TbPatioIdPatio", "TbContatoIdContato");

                    b.HasIndex("TbContatoIdContato");

                    b.ToTable("TB_CONTATOPATIO");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.Endereco", b =>
                {
                    b.Property<int>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_ENDERECO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEndereco"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("NVARCHAR2(9)")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CIDADE");

                    b.Property<string>("Complemento")
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("NVARCHAR2(2)")
                        .HasColumnName("ESTADO");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LOGRADOURO");

                    b.Property<int>("Numero")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMERO");

                    b.Property<string>("Observacao")
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("OBSERVACAO");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("PAIS");

                    b.HasKey("IdEndereco");

                    b.ToTable("TB_ENDERECO");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.EnderecoPatio", b =>
                {
                    b.Property<int>("TbEnderecoIdEndereco")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_ENDERECO_ID_ENDERECO");

                    b.Property<int>("TbPatioIdPatio")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_PATIO_ID_PATIO");

                    b.HasKey("TbEnderecoIdEndereco", "TbPatioIdPatio");

                    b.HasIndex("TbPatioIdPatio");

                    b.ToTable("TB_ENDERECIOPATIO");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.Patio", b =>
                {
                    b.Property<int>("IdPatio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_PATIO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPatio"));

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_ENTRADA");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_SAIDA");

                    b.Property<string>("NomePatio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("NOME_PATIO");

                    b.Property<string>("Observacao")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("OBSERVACAO");

                    b.HasKey("IdPatio");

                    b.ToTable("TB_PATIO");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.PatioBox", b =>
                {
                    b.Property<int>("TbPatioIdPatio")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_PATIO_ID_PATIO");

                    b.Property<int>("TbBoxIdBox")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_BOX_ID_BOX");

                    b.HasKey("TbPatioIdPatio", "TbBoxIdBox");

                    b.HasIndex("TbBoxIdBox");

                    b.ToTable("TB_PATIOBOX");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.Rastreamento", b =>
                {
                    b.Property<int>("IdRastreamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_RASTREAMENTO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRastreamento"));

                    b.Property<decimal>("GprsAltitude")
                        .HasColumnType("NUMBER(38,8)")
                        .HasColumnName("GPRS_ALTITUDE");

                    b.Property<decimal>("GprsLatitude")
                        .HasColumnType("NUMBER(38,8)")
                        .HasColumnName("GPRS_LATITUDE");

                    b.Property<decimal>("GprsLongitude")
                        .HasColumnType("NUMBER(38,8)")
                        .HasColumnName("GPRS_LONGITUDE");

                    b.Property<decimal>("IpsX")
                        .HasColumnType("NUMBER(38,8)")
                        .HasColumnName("IPS_X");

                    b.Property<decimal>("IpsY")
                        .HasColumnType("NUMBER(38,8)")
                        .HasColumnName("IPS_Y");

                    b.Property<decimal>("IpsZ")
                        .HasColumnType("NUMBER(38,8)")
                        .HasColumnName("IPS_Z");

                    b.HasKey("IdRastreamento");

                    b.ToTable("TB_RASTREAMENTO");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.Veiculo", b =>
                {
                    b.Property<int>("IdVeiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_VEICULO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVeiculo"));

                    b.Property<int>("Ano")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ANO");

                    b.Property<string>("Chassi")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVARCHAR2(17)")
                        .HasColumnName("CHASSI");

                    b.Property<string>("Combustivel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("COMBUSTIVEL");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("FABRICANTE");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("MODELO");

                    b.Property<string>("Motor")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)")
                        .HasColumnName("MOTOR");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("PLACA");

                    b.Property<string>("Renavam")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVARCHAR2(11)")
                        .HasColumnName("RENAVAM");

                    b.HasKey("IdVeiculo");

                    b.HasIndex("Chassi")
                        .IsUnique();

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.HasIndex("Renavam")
                        .IsUnique();

                    b.ToTable("TB_VEICULO");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.VeiculoBox", b =>
                {
                    b.Property<int>("TbVeiculoIdVeiculo")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_VEICULO_ID_VEICULO");

                    b.Property<int>("TbBoxIdBox")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_BOX_ID_BOX");

                    b.HasKey("TbVeiculoIdVeiculo", "TbBoxIdBox");

                    b.HasIndex("TbBoxIdBox");

                    b.ToTable("TB_VEICULOBOX");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.VeiculoPatio", b =>
                {
                    b.Property<int>("TbVeiculoIdVeiculo")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_VEICULO_ID_VEICULO");

                    b.Property<int>("TbPatioIdPatio")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_PATIO_ID_PATIO");

                    b.HasKey("TbVeiculoIdVeiculo", "TbPatioIdPatio");

                    b.HasIndex("TbPatioIdPatio");

                    b.ToTable("TB_VEICULOPATIO");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.VeiculoRastreamento", b =>
                {
                    b.Property<int>("TbVeiculoIdVeiculo")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_VEICULO_ID_VEICULO");

                    b.Property<int>("TbRastreamentoIdRastreamento")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_RASTREAMENTO_ID_RASTREAMENTO");

                    b.HasKey("TbVeiculoIdVeiculo", "TbRastreamentoIdRastreamento");

                    b.HasIndex("TbRastreamentoIdRastreamento");

                    b.ToTable("TB_VEICULORASTREAMENTO");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.VeiculoZona", b =>
                {
                    b.Property<int>("TbVeiculoIdVeiculo")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_VEICULO_ID_VEICULO");

                    b.Property<int>("TbZonaIdZona")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_ZONA_ID_ZONA");

                    b.HasKey("TbVeiculoIdVeiculo", "TbZonaIdZona");

                    b.HasIndex("TbZonaIdZona");

                    b.ToTable("TB_VEICULOZONA");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.Zona", b =>
                {
                    b.Property<int>("IdZona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_ZONA");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZona"));

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_ENTRADA");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_SAIDA");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("NOME");

                    b.Property<string>("Observacao")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("OBSERVACAO");

                    b.HasKey("IdZona");

                    b.ToTable("TB_ZONA");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.ZonaBox", b =>
                {
                    b.Property<int>("TbZonaIdZona")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_ZONA_ID_ZONA");

                    b.Property<int>("TbBoxIdBox")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_BOX_ID_BOX");

                    b.HasKey("TbZonaIdZona", "TbBoxIdBox");

                    b.HasIndex("TbBoxIdBox");

                    b.ToTable("TB_ZONABOX");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.ZonaPatio", b =>
                {
                    b.Property<int>("TbPatioIdPatio")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_PATIO_ID_PATIO");

                    b.Property<int>("TbZonaIdZona")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TB_ZONA_ID_ZONA");

                    b.HasKey("TbPatioIdPatio", "TbZonaIdZona");

                    b.HasIndex("TbZonaIdZona");

                    b.ToTable("TB_ZONAPATIO");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.Cliente", b =>
                {
                    b.HasOne("ChallengeMuttuApi.Model.Contato", "Contato")
                        .WithMany("Clientes")
                        .HasForeignKey("TbContatoIdContato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChallengeMuttuApi.Model.Endereco", "Endereco")
                        .WithMany("Clientes")
                        .HasForeignKey("TbEnderecoIdEndereco")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contato");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.ClienteVeiculo", b =>
                {
                    b.HasOne("ChallengeMuttuApi.Model.Cliente", "Cliente")
                        .WithMany("ClienteVeiculos")
                        .HasForeignKey("TbClienteIdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChallengeMuttuApi.Model.Veiculo", "Veiculo")
                        .WithMany("ClienteVeiculos")
                        .HasForeignKey("TbVeiculoIdVeiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.ContatoPatio", b =>
                {
                    b.HasOne("ChallengeMuttuApi.Model.Contato", "Contato")
                        .WithMany("ContatoPatios")
                        .HasForeignKey("TbContatoIdContato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChallengeMuttuApi.Model.Patio", "Patio")
                        .WithMany("ContatoPatios")
                        .HasForeignKey("TbPatioIdPatio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contato");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.EnderecoPatio", b =>
                {
                    b.HasOne("ChallengeMuttuApi.Model.Endereco", "Endereco")
                        .WithMany("EnderecoPatios")
                        .HasForeignKey("TbEnderecoIdEndereco")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChallengeMuttuApi.Model.Patio", "Patio")
                        .WithMany("EnderecoPatios")
                        .HasForeignKey("TbPatioIdPatio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.PatioBox", b =>
                {
                    b.HasOne("ChallengeMuttuApi.Model.Box", "Box")
                        .WithMany("PatioBoxes")
                        .HasForeignKey("TbBoxIdBox")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChallengeMuttuApi.Model.Patio", "Patio")
                        .WithMany("PatioBoxes")
                        .HasForeignKey("TbPatioIdPatio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Box");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.VeiculoBox", b =>
                {
                    b.HasOne("ChallengeMuttuApi.Model.Box", "Box")
                        .WithMany("VeiculoBoxes")
                        .HasForeignKey("TbBoxIdBox")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChallengeMuttuApi.Model.Veiculo", "Veiculo")
                        .WithMany("VeiculoBoxes")
                        .HasForeignKey("TbVeiculoIdVeiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Box");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.VeiculoPatio", b =>
                {
                    b.HasOne("ChallengeMuttuApi.Model.Patio", "Patio")
                        .WithMany("VeiculoPatios")
                        .HasForeignKey("TbPatioIdPatio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChallengeMuttuApi.Model.Veiculo", "Veiculo")
                        .WithMany("VeiculoPatios")
                        .HasForeignKey("TbVeiculoIdVeiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patio");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.VeiculoRastreamento", b =>
                {
                    b.HasOne("ChallengeMuttuApi.Model.Rastreamento", "Rastreamento")
                        .WithMany("VeiculoRastreamentos")
                        .HasForeignKey("TbRastreamentoIdRastreamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChallengeMuttuApi.Model.Veiculo", "Veiculo")
                        .WithMany("VeiculoRastreamentos")
                        .HasForeignKey("TbVeiculoIdVeiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rastreamento");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.VeiculoZona", b =>
                {
                    b.HasOne("ChallengeMuttuApi.Model.Veiculo", "Veiculo")
                        .WithMany("VeiculoZonas")
                        .HasForeignKey("TbVeiculoIdVeiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChallengeMuttuApi.Model.Zona", "Zona")
                        .WithMany("VeiculoZonas")
                        .HasForeignKey("TbZonaIdZona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.ZonaBox", b =>
                {
                    b.HasOne("ChallengeMuttuApi.Model.Box", "Box")
                        .WithMany("ZonaBoxes")
                        .HasForeignKey("TbBoxIdBox")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChallengeMuttuApi.Model.Zona", "Zona")
                        .WithMany("ZonaBoxes")
                        .HasForeignKey("TbZonaIdZona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Box");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.ZonaPatio", b =>
                {
                    b.HasOne("ChallengeMuttuApi.Model.Patio", "Patio")
                        .WithMany("ZonaPatios")
                        .HasForeignKey("TbPatioIdPatio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChallengeMuttuApi.Model.Zona", "Zona")
                        .WithMany("ZonaPatios")
                        .HasForeignKey("TbZonaIdZona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patio");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.Box", b =>
                {
                    b.Navigation("PatioBoxes");

                    b.Navigation("VeiculoBoxes");

                    b.Navigation("ZonaBoxes");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.Cliente", b =>
                {
                    b.Navigation("ClienteVeiculos");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.Contato", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("ContatoPatios");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.Endereco", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("EnderecoPatios");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.Patio", b =>
                {
                    b.Navigation("ContatoPatios");

                    b.Navigation("EnderecoPatios");

                    b.Navigation("PatioBoxes");

                    b.Navigation("VeiculoPatios");

                    b.Navigation("ZonaPatios");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.Rastreamento", b =>
                {
                    b.Navigation("VeiculoRastreamentos");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.Veiculo", b =>
                {
                    b.Navigation("ClienteVeiculos");

                    b.Navigation("VeiculoBoxes");

                    b.Navigation("VeiculoPatios");

                    b.Navigation("VeiculoRastreamentos");

                    b.Navigation("VeiculoZonas");
                });

            modelBuilder.Entity("ChallengeMuttuApi.Model.Zona", b =>
                {
                    b.Navigation("VeiculoZonas");

                    b.Navigation("ZonaBoxes");

                    b.Navigation("ZonaPatios");
                });
#pragma warning restore 612, 618
        }
    }
}
